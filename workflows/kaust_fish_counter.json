{
    "name": "KAUST Fish Counter", 
    "args": [
        {
            "name": "filename",
            "type": "string",
            "disc": "filepath for video in case of streaming from video file",
            "source": "infered",
            "default": null
        },
        {
            "name": "url",
            "type": "string",
            "disc": "url for camera in case of streaming server",
            "source": "infered",
            "default": null
        },
        {
            "name": "host",
            "type": "string",
            "disc": "host for camera in case of rtsp camera",
            "source": "infered",
            "default": null
        },
        {
            "name": "port",
            "type": "string",
            "disc": "port for camera in case of rtsp camera",
            "source": "infered",
            "default": null
        },
        {
            "name": "username",
            "type": "string",
            "disc": "username for camera in case of rtsp camera",
            "source": "infered",
            "default": null
        },
        {
            "name": "password",
            "type": "string",
            "disc": "password for camera in case of rtsp camera",
            "source": "infered",
            "default": null
        },
        {
            "name": "sample_every",
            "type": "int",
            "disc": "Sample every (seconds for stream and frame for video)",
            "source": "user",
            "default": 30
        },
        {
            "name": "min_score_thresh",
            "type": "float",
            "disc": "Minimum detection confidance ([0-1])",
            "source": "user",
            "default": 0.50
        },
        {
            "name": "max_boxes",
            "type": "int",
            "disc": "Maximum number of detections ([0-100])",
            "source": "user",
            "default": 100
        },     
        {
            "name": "length",
            "type": "float",
            "disc": "Length of streaming (seconds, -1 for entire video)",
            "source": "user",
            "default": -1
        },
        {
            "name": "frequency",
            "type": "int",
            "disc": "Output frequency (every n frame)",
            "source": "user",
            "default": 3
        },
        {
            "name": "output_filename",
            "type": "string",
            "disc": "Filename path where to store results",
            "source": "system"
        }
    ],       
    "nodes": [
        {
            "name": "stream_source",
            "type": "DynamicSource",
            "filename": "$filename",
            "url": "$url",
            "host": "$host",
            "port": "$port",
            "username": "$username",
            "password": "$password",
            "length": "$length",
            "sample_every": "$sample_every"
        },   
        {
            "name": "findfish_model",
            "type": "TFObjectDetectionModel",
            "model_name": "findfish",
            "version": 1
        },
        {
            "name": "falcoeye_detection",
            "type": "FalcoeyeDetectionNode",
            "labelmap": "/Users/jalalirs/Documents/code/falcoeye/falcoeye_backbones/portofolio/fish/findfish/1/label_map.json",
            "min_score_thresh": "$min_score_thresh",
            "max_boxes": "$max_boxes"
        },
        {
            "name": "class_counter",
            "type": "ClassCounter",
            "keys": ["fish"]
        },
        {
            "name": "csv_outputter",
            "type": "CSVWriter",
            "filename": "$output_filename"
        }
    ],
    "edges": [
        [ "stream_source","findfish_model"],
        [ "findfish_model","falcoeye_detection"],
        [ "falcoeye_detection","class_counter"],
        [ "class_counter","csv_outputter"]
    ],
    "starters":["stream_source"],
    "run_order": [
        "stream_source",
        "findfish_model",
        "falcoeye_detection",
        "class_counter",
        "csv_outputter"
    ]
}